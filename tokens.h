
#ifndef __TOKENS_H__
#define __TOKENS_H__

#include <vector>
#include <map>

typedef std::vector<int> production;

const int MAXTERM = 125;
const int MAXNONTERM = 41;
const int ERRORCODE = 89;

const int NT_REFERENCE = -33;
const int T_ID = 16;
const int NT_COMPARISON1 = -10;
const int T_IF = 17;
const int T_FUNCTION = 13;
const int NT_PARAMDECL1 = -29;
const int NT_ARRAYINIT = -5;
const int NT_CONDITION1 = -12;
const int NT_REFERENCE2 = -35;
const int T_RBRACKET = 93;
const int T_COLON = 58;
const int NT_ARGUMENTS1 = -2;
const int T_TO = 32;
const int T_TRUE = 33;
const int NT_PARAMETERS1 = -31;
const int NT_LOGIC = -23;
const int T_IMPORT = 18;
const int NT_ARITHMETIC1 = -4;
const int NT_ASSIGNMENT = -7;
const int T_AND = 1;
const int T_STRING = 30;
const int T_DO = 4;
const int NT_FINAL = -19;
const int NT_DICTIONARYINIT1 = -14;
const int NT_STMTLIST = -37;
const int T_BREAK = 2;
const int NT_FACTOR = -18;
const int NT_ELSEIF2 = -16;
const int NT_FORLOOP = -20;
const int NT_PARAMETERS = -30;
const int T_EOF = 7;
const int NT_IF = -21;
const int T_MINUS = 45;
const int T_FALSE = 9;
const int T_PLUS = 43;
const int T_COMMA = 44;
const int NT_ARGUMENTS = -1;
const int NT_ELSEIF1 = -15;
const int T_DOT = 46;
const int T_DIV = 47;
const int T_NEQ = 25;
const int T_RBRACES = 125;
const int T_FOR = 12;
const int NT_INDEFINITELOOP = -22;
const int T_RETURN = 29;
const int T_THEN = 31;
const int T_OR = 28;
const int T_TIMES = 42;
const int NT_EXPR = -17;
const int NT_STMT = -36;
const int NT_PROGRAM = -32;
const int T_EQ = 8;
const int T_CONTINUE = 3;
const int NT_COMPARISON = -9;
const int NT_DICTIONARYINIT = -13;
const int T_GT = 15;
const int NT_T_FUNCTIONDEF = -40;
const int T_NEG = 24;
const int T_WHILE = 34;
const int T_INT = 19;
const int T_ASSIGN = 61;
const int T_NILL = 26;
const int T_LPARENS = 40;
const int T_LE = 21;
const int NT_REFERENCE1 = -34;
const int NT_PARAMDECL = -28;
const int T_GE = 14;
const int NT_LVALUE1 = -25;
const int T_NOT = 27;
const int T_END = 6;
const int T_LOOP = 22;
const int NT_ARITHMETIC = -3;
const int T_RPARENS = 41;
const int NT_WHILELOOP = -41;
const int NT_TERM = -38;
const int NT_BOOLEAN = -8;
const int NT_LVALUE = -24;
const int NT_OBJECT = -26;
const int T_LBRACKET = 91;
const int T_FLOAT = 11;
const int NT_ARRAYINIT1 = -6;
const int T_LBRACES = 123;
const int NT_CONDITION = -11;
const int T_ENDL = 10;
const int NT_OBJECT1 = -27;
const int NT_TERM1 = -39;
const int T_ELSE = 5;
const int T_ITERATE = 20;
const int T_LT = 23;

std::vector<production> productions = {{NT_STMTLIST},{NT_STMTLIST,NT_STMT},{},{T_ENDL,T_ID,T_IMPORT},{T_ENDL},{T_ENDL,NT_ASSIGNMENT},{T_ENDL,NT_T_FUNCTIONDEF},{T_ENDL,NT_IF},{T_ENDL,NT_FORLOOP},{T_ENDL,NT_WHILELOOP},{T_ENDL,NT_INDEFINITELOOP},{T_ENDL,NT_EXPR,T_RETURN},{T_ENDL,T_BREAK},{T_ENDL,T_CONTINUE},{T_END,NT_STMTLIST,T_ENDL,NT_PARAMETERS,T_ID,T_FUNCTION},{NT_PARAMETERS1,T_LPARENS},{T_RPARENS},{T_RPARENS,NT_PARAMDECL},{NT_PARAMDECL1,T_ID},{NT_PARAMDECL1,T_ID,T_COMMA},{},{NT_ELSEIF1,NT_STMTLIST,T_ENDL,T_THEN,NT_CONDITION,T_IF},{NT_ELSEIF2,T_ELSE},{T_END},{T_END,NT_STMTLIST,T_ENDL},{NT_IF},{T_LOOP,NT_STMTLIST,T_ENDL,T_DO,NT_ARITHMETIC,T_TO,NT_ARITHMETIC,T_ASSIGN,T_ID,T_FOR},{T_LOOP,NT_STMTLIST,T_ENDL,T_DO,NT_CONDITION,T_WHILE},{T_LOOP,NT_STMTLIST,T_ENDL,T_ITERATE},{NT_CONDITION,T_ASSIGN,NT_LVALUE},{NT_CONDITION},{NT_CONDITION1,NT_LOGIC},{NT_CONDITION1,NT_LOGIC,T_AND},{NT_CONDITION1,NT_LOGIC,T_OR},{},{NT_COMPARISON,T_NOT},{NT_COMPARISON},{NT_COMPARISON1,NT_ARITHMETIC},{NT_COMPARISON1,NT_ARITHMETIC,T_EQ},{NT_COMPARISON1,NT_ARITHMETIC,T_NEQ},{NT_COMPARISON1,NT_ARITHMETIC,T_LT},{NT_COMPARISON1,NT_ARITHMETIC,T_GT},{NT_COMPARISON1,NT_ARITHMETIC,T_LE},{NT_COMPARISON1,NT_ARITHMETIC,T_GE},{},{NT_ARITHMETIC1,NT_TERM},{NT_ARITHMETIC1,NT_TERM,T_PLUS},{NT_ARITHMETIC1,NT_TERM,T_MINUS},{},{NT_TERM1,NT_FACTOR},{NT_TERM1,NT_FACTOR,T_TIMES},{NT_TERM1,NT_FACTOR,T_DIV},{},{NT_FACTOR,T_MINUS},{NT_FACTOR,T_NEG},{NT_FINAL},{T_RPARENS,NT_EXPR,T_LPARENS},{NT_BOOLEAN},{T_INT},{T_FLOAT},{T_STRING},{NT_OBJECT},{NT_REFERENCE},{T_NILL},{NT_LVALUE1,T_ID},{},{NT_LVALUE1,T_ID,T_DOT},{NT_LVALUE1,T_RBRACKET,NT_EXPR,T_LBRACKET},{NT_REFERENCE1,NT_LVALUE},{},{NT_REFERENCE2,T_LPARENS},{NT_REFERENCE1,T_RPARENS},{NT_REFERENCE1,T_RPARENS,NT_ARGUMENTS},{NT_ARGUMENTS1,NT_EXPR},{},{NT_ARGUMENTS1,NT_EXPR,T_COMMA},{NT_OBJECT1,T_LBRACKET},{T_RBRACES,NT_DICTIONARYINIT,T_LBRACES},{T_RBRACKET},{T_RBRACKET,NT_ARRAYINIT},{NT_ARRAYINIT1,NT_EXPR},{},{NT_ARRAYINIT1,NT_EXPR,T_COMMA},{NT_DICTIONARYINIT1,NT_EXPR,T_COLON,T_ID},{},{NT_DICTIONARYINIT1,NT_EXPR,T_COLON,T_ID,T_COMMA},{T_TRUE},{T_FALSE}};

std::vector<std::vector<int>> table = {{89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 73, 89, 73, 89, 89, 89, 89, 73, 89, 89, 73, 89, 89, 89, 89, 73, 89, 73, 73, 89, 89, 73, 89, 89, 73, 89, 89, 89, 89, 89, 89, 73, 89, 89, 89, 89, 73, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 73, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 73, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 74, 89, 89, 75, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 45, 89, 45, 89, 89, 89, 89, 45, 89, 89, 45, 89, 89, 89, 89, 45, 89, 45, 89, 89, 89, 45, 89, 89, 45, 89, 89, 89, 89, 89, 89, 45, 89, 89, 89, 89, 45, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 45, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 45, 89, 89}, {89, 48, 89, 89, 48, 89, 89, 89, 48, 89, 48, 89, 89, 89, 48, 48, 89, 89, 89, 89, 89, 48, 89, 48, 89, 48, 89, 89, 48, 89, 89, 48, 48, 89, 89, 89, 89, 89, 89, 89, 89, 48, 89, 46, 48, 47, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 48, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 48}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 80, 89, 80, 89, 89, 89, 89, 80, 89, 89, 80, 89, 89, 89, 89, 80, 89, 80, 80, 89, 89, 80, 89, 89, 80, 89, 89, 89, 89, 89, 89, 80, 89, 89, 89, 89, 80, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 80, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 80, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 82, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 81, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 29, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 87, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 86, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 37, 89, 37, 89, 89, 89, 89, 37, 89, 89, 37, 89, 89, 89, 89, 37, 89, 37, 89, 89, 89, 37, 89, 89, 37, 89, 89, 89, 89, 89, 89, 37, 89, 89, 89, 89, 37, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 37, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 37, 89, 89}, {89, 44, 89, 89, 44, 89, 89, 89, 38, 89, 44, 89, 89, 89, 43, 41, 89, 89, 89, 89, 89, 42, 89, 40, 89, 39, 89, 89, 44, 89, 89, 44, 89, 89, 89, 89, 89, 89, 89, 89, 89, 44, 89, 89, 44, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 44, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 44}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 31, 89, 31, 89, 89, 89, 89, 31, 89, 89, 31, 89, 89, 89, 89, 31, 89, 31, 31, 89, 89, 31, 89, 89, 31, 89, 89, 89, 89, 89, 89, 31, 89, 89, 89, 89, 31, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 31, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 31, 89, 89}, {89, 32, 89, 89, 34, 89, 89, 89, 89, 89, 34, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 33, 89, 89, 34, 89, 89, 89, 89, 89, 89, 89, 89, 89, 34, 89, 89, 34, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 34, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 34}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 83, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 85, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 84}, {89, 89, 89, 89, 89, 22, 23, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 24, 89, 89, 89, 89, 89, 89, 25, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 30, 89, 30, 89, 89, 89, 89, 30, 89, 89, 30, 89, 89, 89, 89, 30, 89, 30, 30, 89, 89, 30, 89, 89, 30, 89, 89, 89, 89, 89, 89, 30, 89, 89, 89, 89, 30, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 30, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 30, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 55, 89, 55, 89, 89, 89, 89, 55, 89, 89, 55, 89, 89, 89, 89, 54, 89, 55, 89, 89, 89, 55, 89, 89, 55, 89, 89, 89, 89, 89, 89, 55, 89, 89, 89, 89, 53, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 55, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 55, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 57, 89, 59, 89, 89, 89, 89, 62, 89, 89, 58, 89, 89, 89, 89, 89, 89, 63, 89, 89, 89, 60, 89, 89, 57, 89, 89, 89, 89, 89, 89, 56, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 61, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 61, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 26, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 21, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 28, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 36, 89, 36, 89, 89, 89, 89, 36, 89, 89, 36, 89, 89, 89, 89, 36, 89, 36, 35, 89, 89, 36, 89, 89, 36, 89, 89, 89, 89, 89, 89, 36, 89, 89, 89, 89, 36, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 36, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 36, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 64, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 65, 89, 89, 65, 89, 89, 89, 65, 89, 65, 89, 89, 89, 65, 65, 89, 89, 89, 89, 89, 65, 89, 65, 89, 65, 89, 89, 65, 89, 89, 65, 65, 89, 89, 89, 89, 89, 89, 89, 65, 65, 65, 65, 65, 65, 66, 65, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 65, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 67, 89, 65, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 65}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 76, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 77, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 79, 89, 79, 89, 89, 89, 89, 79, 89, 89, 79, 89, 89, 89, 89, 79, 89, 79, 79, 89, 89, 79, 89, 89, 79, 89, 89, 89, 89, 89, 89, 79, 89, 89, 89, 89, 79, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 79, 89, 78, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 79, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 18, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 20, 89, 89, 19, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 15, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 17, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 16, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 0, 0, 89, 89, 89, 89, 89, 89, 0, 89, 0, 0, 89, 89, 0, 0, 0, 89, 0, 89, 89, 89, 89, 89, 89, 89, 89, 0, 89, 89, 89, 89, 0, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 68, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 69, 89, 89, 69, 89, 89, 89, 69, 89, 69, 89, 89, 89, 69, 69, 89, 89, 89, 89, 89, 69, 89, 69, 89, 69, 89, 89, 69, 89, 89, 69, 69, 89, 89, 89, 89, 89, 89, 89, 70, 69, 69, 69, 69, 69, 89, 69, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 69, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 69}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 72, 89, 72, 89, 89, 89, 89, 72, 89, 89, 72, 89, 89, 89, 89, 72, 89, 72, 72, 89, 89, 72, 89, 89, 72, 89, 89, 89, 89, 89, 89, 72, 71, 89, 89, 89, 72, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 72, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 72, 89, 89}, {89, 89, 12, 13, 89, 89, 89, 89, 89, 89, 4, 89, 8, 6, 89, 89, 5, 7, 3, 89, 10, 89, 89, 89, 89, 89, 89, 89, 89, 11, 89, 89, 89, 89, 9, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 1, 1, 89, 2, 2, 2, 89, 89, 1, 89, 1, 1, 89, 89, 1, 1, 1, 89, 1, 89, 2, 89, 89, 89, 89, 89, 89, 1, 89, 89, 89, 89, 1, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 49, 89, 49, 89, 89, 89, 89, 49, 89, 89, 49, 89, 89, 89, 89, 49, 89, 49, 89, 89, 89, 49, 89, 89, 49, 89, 89, 89, 89, 89, 89, 49, 89, 89, 89, 89, 49, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 49, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 49, 89, 89}, {89, 52, 89, 89, 52, 89, 89, 89, 52, 89, 52, 89, 89, 89, 52, 52, 89, 89, 89, 89, 89, 52, 89, 52, 89, 52, 89, 89, 52, 89, 89, 52, 52, 89, 89, 89, 89, 89, 89, 89, 89, 52, 50, 52, 52, 52, 89, 51, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 52, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 52}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 14, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}, {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 27, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89}};


std::map<int, const char*> symbol_names = {{-33,"NT_REFERENCE"},{16,"T_ID"},{-10,"NT_COMPARISON1"},{17,"T_IF"},{13,"T_FUNCTION"},{-29,"NT_PARAMDECL1"},{-5,"NT_ARRAYINIT"},{-12,"NT_CONDITION1"},{-35,"NT_REFERENCE2"},{93,"T_RBRACKET"},{58,"T_COLON"},{-2,"NT_ARGUMENTS1"},{32,"T_TO"},{33,"T_TRUE"},{-31,"NT_PARAMETERS1"},{-23,"NT_LOGIC"},{18,"T_IMPORT"},{-4,"NT_ARITHMETIC1"},{-7,"NT_ASSIGNMENT"},{1,"T_AND"},{30,"T_STRING"},{4,"T_DO"},{-19,"NT_FINAL"},{-14,"NT_DICTIONARYINIT1"},{-37,"NT_STMTLIST"},{2,"T_BREAK"},{-18,"NT_FACTOR"},{-16,"NT_ELSEIF2"},{-20,"NT_FORLOOP"},{-30,"NT_PARAMETERS"},{7,"T_EOF"},{-21,"NT_IF"},{45,"T_MINUS"},{9,"T_FALSE"},{43,"T_PLUS"},{44,"T_COMMA"},{-1,"NT_ARGUMENTS"},{-15,"NT_ELSEIF1"},{46,"T_DOT"},{47,"T_DIV"},{25,"T_NEQ"},{125,"T_RBRACES"},{12,"T_FOR"},{-22,"NT_INDEFINITELOOP"},{29,"T_RETURN"},{31,"T_THEN"},{28,"T_OR"},{42,"T_TIMES"},{-17,"NT_EXPR"},{-36,"NT_STMT"},{-32,"NT_PROGRAM"},{8,"T_EQ"},{3,"T_CONTINUE"},{-9,"NT_COMPARISON"},{-13,"NT_DICTIONARYINIT"},{15,"T_GT"},{-40,"NT_T_FUNCTIONDEF"},{24,"T_NEG"},{34,"T_WHILE"},{19,"T_INT"},{61,"T_ASSIGN"},{26,"T_NILL"},{40,"T_LPARENS"},{21,"T_LE"},{-34,"NT_REFERENCE1"},{-28,"NT_PARAMDECL"},{14,"T_GE"},{-25,"NT_LVALUE1"},{27,"T_NOT"},{6,"T_END"},{22,"T_LOOP"},{-3,"NT_ARITHMETIC"},{41,"T_RPARENS"},{-41,"NT_WHILELOOP"},{-38,"NT_TERM"},{-8,"NT_BOOLEAN"},{-24,"NT_LVALUE"},{-26,"NT_OBJECT"},{91,"T_LBRACKET"},{11,"T_FLOAT"},{-6,"NT_ARRAYINIT1"},{123,"T_LBRACES"},{-11,"NT_CONDITION"},{10,"T_ENDL"},{-27,"NT_OBJECT1"},{-39,"NT_TERM1"},{5,"T_ELSE"},{20,"T_ITERATE"},{23,"T_LT"}};

#endif

